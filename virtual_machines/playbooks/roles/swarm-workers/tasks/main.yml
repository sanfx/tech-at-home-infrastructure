---
- name: Get info on docker host
  vars:
    ansible_python_interpreter: /usr/bin/python3
  tags: ["docker"]
  docker_host_info:
  register: result
  ignore_errors: true

- name: is node part of swarm
  tags: ["docker"]
  shell: docker system info | grep Swarm | awk '{print $NF}'
  register: swarm_worker_status
  become: yes
  ignore_errors: true

- name: getting  python version {{ansible_hostname}}
  shell: python --version
  register: pyver

- name: print result of swarm_worker_status {{ansible_hostname}}
  tags: ["docker"]
  vars:
    ansible_python_interpreter: /usr/bin/python3
  debug:
    msg:
      - "{{swarm_worker_status.stdout}}"
      - "{{pyver}}"

- name: Add Docker node to exisiting Swarn.
  tags: ["docker"]
  when: "'{{swarm_worker_status.stdout}}' == 'inactive'"
  shell: docker swarm join --token {{ hostvars[groups['swarm_managers'][0]]['worker_token']['stdout'] }}  {{ hostvars[groups['swarm_managers'][0]]['ansible_enp0s9']['ipv4']['address'] }}:2377
  become: yes
  ignore_errors: false

- name: Systemd dnsmasq service de-activation
  tags: ["dns"]
  ansible.builtin.systemd:
    name: dnsmasq.service
    enabled: no
    state: stopped
