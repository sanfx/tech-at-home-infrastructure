---
- name: Verify stacks directory exists (on first swarm node)
  tags: ["traefik", "never"]
  file:
    path: "/home/{{ansible_user}}/stacks/traefik/"
    state: directory

- name: Copy traefik static with owner and permissions
  tags: ["traefik", "config", "never"]
  ansible.builtin.copy:
    src: ./static
    dest: /home/{{ansible_user}}/stacks/traefik/
    owner: "{{ansible_user}}"
    group: "{{ansible_user}}"
    mode: '0644'

- name: Copy traefik dynamic with owner and permissions
  tags: ["traefik", "config", "never"]
  ansible.builtin.copy:
    src: ./config
    dest: /home/{{ansible_user}}/stacks/traefik/
    owner: "{{ansible_user}}"
    group: "{{ansible_user}}"
    mode: '0644'

- name: Generate admin password hash
  shell: echo $(htpasswd -nb {{traefik_admin_user}} {{traefik_admin_password}}) | sed -e s/\\$/\\$\\$/g
  tags: ["traefik", "never"]
  register: traefikpassword

- name: Create docker-compose stack file.
  tags: ["traefik", "never"]
  template:
    src: docker-socket-compose.j2
    dest: /home/{{ansible_user}}/stacks/traefik/docker-compose.yml
    mode: 0775

# - name: Create docker-compose stack file (on first swarm node)
#   tags: ["traefik"]
#   template:
#     src: traefik-stack.j2
#     dest: /home/{{ansible_user}}/stacks/traefik/traefik-stack.yml
#     mode: 0775

# - name: Install jsondiff Python library
#   become: true
#   become_method: sudo
#   tags: ["pip3"]
#   pip:
#     name: jsondiff

# - name: Install pyyaml Python library
#   become: true
#   become_method: sudo
#   tags: ["pip3"]
#   pip:
#     name: pyyaml

- name: create traefik and access log files.
  file:
      path: "{{ item }}"
      state: touch
  with_items:
    - "/var/log/traefik.log"
    - "/var/log/access.log"
  become: true
  tags: ["traefik", "never"]
  become_method: sudo
  ignore_errors: true

- name: Traefik docker compose Service file creation
  tags: ["traefik", "never"]
  copy:
    dest: /etc/systemd/system/docker-compose.service
    content: |
      [Unit]
      Description=Docker Socket Compose Service
      Requires=docker.service
      After=docker.service
      [Service]
      Type=oneshot
      RemainAfterExit=true
      WorkingDirectory=/home/{{ansible_user}}/stacks/traefik/
      ExecStart=/usr/local/bin/docker-compose up -d --remove-orphans
      ExecStop=/usr/local/bin/docker-compose down
      [Install]
      WantedBy=multi-user.target

- name: forcing systemd to re-execute itself (2.8 and above)
  tags: ["traefik", "never"]
  ansible.builtin.systemd:
    daemon_reexec: yes

- name: Systemd service activation
  tags: ["traefik", "never"]
  ansible.builtin.systemd:
    name: docker-compose.service
    enabled: yes
    state: started
