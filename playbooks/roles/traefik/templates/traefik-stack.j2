version: '3.7'

services:
  reverse-proxy:
    image: traefik:2.6
    hostname: "{{traefik_app_name}}"
    command:
      - "--api.dashboard=true"
      - "--providers.docker"
      - "--providers.docker.swarmMode=false"
      - "--entrypoints.web.address=:{{traefik_listen_port}}"
      - "--providers.docker.exposedByDefault=true"
      - "--providers.docker.network={{traefik_network_name}}"
      - "--log.level=DEBUG"
      - "--log.filePath=/var/log/traefik.log"
      - "--accessLog.filePath=/var/log/access.log"
    ports:
      - target: 443
        published: 443
        mode: host
      - target: {{traefik_listen_port}}
        published: {{traefik_listen_port}}
        mode: host
      - target: {{traefik_admin_port}}
        published: 8080
        mode: host
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/log/traefik.log:/var/log/traefik.log
      - /var/log/access.log:/var/log/access.log
      - /home/{{ansible_user}}/stacks/traefik/static/traefik.yml:/traefik.yml
      - /home/{{ansible_user}}/stacks/traefik/config:/config/
    networks:
      - {{traefik_network_name}}
    deploy:
      labels:
          - "diun.enable=true"
          - "traefik.enable=true"
          - "traefik.http.routers.api.rule=Host(`{{traefik_app_name}}.{{app_domain_name}}`)"
          - "traefik.http.routers.api.service=api@internal"
          # - "traefik.http.routers.api.middlewares=auth"
          # - "traefik.http.middlewares.auth.basicauth.users={{traefikpassword.stdout}}"
          # Dummy service for Swarm port detection. The port can be any valid integer value.
          - "traefik.http.services.dummy-svc.loadbalancer.server.port=9999"
          # Homer Service discovery label
          - "homer.enable=true"
          - "homer.service=Homelab"
          - "homer.name={{traefik_app_name}}"
          - "homer.subtitle='{{traefik_app_name}} Reverse Proxy'"
          - "homer.icon='far fa-hand-peace'"
          - "homer.priority=2"
          - "homer.url='http://{{traefik_app_name}}.{{app_domain_name}}'"
      mode: global
      placement:
        constraints: [node.role == manager]

networks:
  {{traefik_network_name}}:
    external: true
