---
- name: Verify stacks/uptime-kuma and its data directory exists
  tags: ["monitor", "uptime"]
  file:
    path: "/home/{{ansible_user}}/stacks/monitor/uptime-kuma/data"
    state: directory

- name: Verify prometheus directory exists (on first swarm node)
  tags: ["monitor"]
  file:
    path: "/home/{{ansible_user}}/stacks/prometheus"
    state: directory

- name: Verify prometheus directory exists (on first swarm node)
  tags: ["monitor"]
  file:
    path: "/home/{{ansible_user}}/stacks/prometheus/data"
    state: directory
    mode: "0777"

- name: Verify prometheus config directory exists (on first swarm node)
  tags: ["monitor"]
  file:
    path: "/etc/prometheus"
    state: directory

- name: Create docker-compose stack file for cluster monitor(on first swarm node)
  tags: ["monitor"]
  when: inventory_hostname == groups['swarm_managers'][0]
  template:
    src: cluster-monitoring.j2
    dest: /home/{{ansible_user}}/stacks/cluster_monitoring/cluster-monitoring-stack.yml
    mode: 0775

- name: Copy Prometheus rules with owner and permissions
  tags: ["monitor"]
  ansible.builtin.copy:
    src: ./rules
    dest: /home/{{ansible_user}}/stacks/prometheus
    owner: "{{ansible_user}}"
    group: "{{ansible_user}}"
    mode: '0644'

- name: Create prometheus config file for cluster monitor(on first swarm node)
  tags: ["monitor"]
  template:
    src: prometheus-config.j2
    dest: /etc/prometheus/prometheus.yml

- name: Create diun yaml config file for cluster monitor(on first swarm node)
  tags: ["monitor"]
  when: inventory_hostname == groups['swarm_managers'][0]
  template:
    src: diun.j2
    dest: /home/{{ansible_user}}/stacks/cluster_monitoring/diun.yml

- name: Deploy cluster monitoring stack from a compose file (on first swarm node)
  when: inventory_hostname == groups['swarm_managers'][0]
  docker_stack:
    state: present
    name: cluster_monitoring
    compose:
      - /home/{{ansible_user}}/stacks/cluster_monitoring/cluster-monitoring-stack.yml
  tags: ["monitor"]

- name: Create docker-compose stack file.
  tags: ["monitor", "uptime"]
  template:
    src: uptime-kuma.j2
    dest: /home/{{ansible_user}}/stacks/monitor/uptime-kuma/docker-compose.yml
    mode: 0775

- name: Uptime-kuma Service file creation
  tags: ["monitor", "uptime"]
  copy:
    dest: /etc/systemd/system/uptime-docker-compose.service
    content: |
      [Unit]
      Description=Docker Compose Service for Uptime Kuma
      Requires=docker.service
      After=docker.service
      [Service]
      Type=oneshot
      RemainAfterExit=true
      WorkingDirectory=/home/{{ansible_user}}/stacks/monitor/uptime-kuma
      ExecStart=/usr/local/bin/docker-compose up -d --remove-orphans
      ExecStop=/usr/local/bin/docker-compose down
      [Install]
      WantedBy=multi-user.target

- name: forcing systemd to re-execute itself (2.8 and above)
  ansible.builtin.systemd:
    daemon_reexec: yes

- name: Systemd service activation
  tags: ["uptime"]
  ansible.builtin.systemd:
    name: uptime-docker-compose.service
    enabled: yes
    state: started